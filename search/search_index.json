{"config":{"lang":["de"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Heureka Health","text":"<p>Heureka erlaubt Drittanbietern (Heureka Anwendungen) den sicheren Zugriff auf eine FHIR (v4) kompatible API Schnittstelle, um auf freigegebene Daten aus dem Prim\u00e4rsystem einer Arztpraxis (Healthcare Provider, HCP) zuzugreifen.</p>"},{"location":"access_logging/","title":"Access Logging","text":""},{"location":"access_logging/#access-logging","title":"Access Logging","text":"<p>Um gegen\u00fcber dem HCP gr\u00f6sstm\u00f6gliche Transparenz \u00fcber die Verwendung der Daten zu gew\u00e4hrleisten, muss mit jedem API-Request ein entsprechender Request-Context via HTTP Header Werten mitgesendet werden. Diese Daten sind im Heureka Portal f\u00fcr 180 Tage sichtbar.</p> <p>Kontext-Typ und Rollen werden als Teil des Onboardings zusammen mit Heureka definiert und API-seitig validiert.</p> Header Beschreibung Beispiel X-HEUREKA-RequestContextId UUID v4 000000000-1111-2222-3333-555555555555 X-HEUREKA-RequestContextType Beschreibt den fachlichen Kontext in dem der Zugriff stattfindet MEDICATION_CHECK X-HEUREKA-UserRole Rolle die beschreibt, wer den Zugriff t\u00e4tigt (oder SYSTEM f\u00fcr technische Zugriffe ohne User) PRACTICE X-HEUREKA-UserName Name oder Bezeichnung (oder leer f\u00fcr SYSTEM Zugriffe). Spezialzeichen als UTF-8 URL-encodieren. <code>Dr. M%C3%BCller</code> (vor URL-Encoding: <code>Dr. M\u00fcller</code>"},{"location":"access_logging/#beispiel","title":"Beispiel","text":"<p>Medikationszugriff</p> <p>Eine Anwendung erlaubt es Nutzer:innen nach Patienten zu suchen und deren aktuelle Medikation darzustellen, dazu wird ein Patient anhand der AHV Nummer gesucht und anschliessend die Medikation abgerufen. Da die beiden Requests fachlich zusammen geh\u00f6ren, wird derselbe Request-Context gesetzt.</p> <pre><code>GET /Patient?search...\nX-HEUREKA-RequestContextId: 000000000-1111-2222-3333-555555555555\nX-HEUREKA-RequestContextType: MEDICATION_CHECK\nX-HEUREKA-UserRole: PRACTICE\nX-HEUREKA-UserName: Dr. M%C3%BCller\n</code></pre> <pre><code>GET /Medication?subject=PATIENT_ID\nX-HEUREKA-RequestContextId: 000000000-1111-2222-3333-555555555555\nX-HEUREKA-RequestContextType: MEDICATION_CHECK\nX-HEUREKA-UserRole: PRACTICE\nX-HEUREKA-UserName: Dr. M%C3%BCller\n</code></pre>"},{"location":"app_access/","title":"Anwendungen","text":""},{"location":"app_access/#anwendungs-registrierung","title":"Anwendungs-Registrierung","text":"<p>Um die Heureka API verwenden zu k\u00f6nnen, ben\u00f6tigt eine Anwendung </p> <ul> <li>ein g\u00fcltiges mTLS Client-Zertifikat </li> <li>eine Freigabe der verwendeten Server-IP.</li> </ul> <p>Ausserdem ben\u00f6tigt wird die Client-ID und es muss eine g\u00fcltige Redirect-URI f\u00fcr den Authentisierungsvorgang eingerichtet sein, zudem m\u00fcssen die entsprechenden Request Context Parameter definiert sein.</p>"},{"location":"app_access/#betriebsumgebungen","title":"Betriebsumgebungen","text":"<p>Heureka betreibt neben dem Produktivsystem eine Testumgebung gegen welche s\u00e4mtliche Entwicklungsarbeiten stattfinden sollten.</p> Endpunkt Produktivsystem Testsystem Portal / Authentisierung portal.heureka.health portal.testing.heureka.health Token (mTLS) token.heureka.health token.testing.heureka.health API (mTLS) api.heureka.health api.testing.heureka.health"},{"location":"app_access/#autorisierung","title":"Autorisierung","text":""},{"location":"app_access/#zugriff-beantragen","title":"Zugriff Beantragen","text":"<p>Die Zugriffsfreigabe findet direkt zwischen einer der Praxis zugeordneten Person (HCP) und der Heureka Anwendung statt. Dazu bietet Heureka einen OAuth2 kompatiblen Authorization Code Flow an, mit welchem die Datenfreigabe und die damit verbundene Ausstellung der notwendigen Access-Token initiiert wird.</p> <p>Um den Authentisierungsvorgang einzuleiten, muss der Benutzer auf folgende URL geleitet werden.</p> <pre><code>https://portal.testing.heureka.health/authorization/grant?client_id=CLIENT_ID&amp;state=RANDOM_ANTI_CSRF_STRING&amp;redirect_uri=https://example.com/callback\n</code></pre>"},{"location":"app_access/#request-parameter","title":"Request Parameter","text":"Name Beschreibung client_id Client ID der Anwendung state Optionales CSRF state token welches nach dem Redirect \u00fcberpr\u00fcft werden sollte redirect_uri URI auf welche nach erfolgreicher oder abgelehnter Authorisierung weitergeleitet wird"},{"location":"app_access/#redirect-error-codes","title":"Redirect Error Codes","text":"<p>Falls bei der Autorisierung ein Fehler auftritt, enth\u00e4lt die <code>redurect_uri</code> einen <code>error</code> Query-Parameter mit einem entsprechenden Fehlercode.</p> <p>Diese \u00f6ffnet den Heureka-Authentisierungsdialog, in welchem sich der Praxisbenutzer anmelden und die von der Anwendung ben\u00f6tigten Berechtigungen einsehen und best\u00e4tigen kann.</p> <p>Anschliessend findet ein Redirect auf die im initialen Request angegebene Redirect-URL statt, welche den Code (Query Parameter <code>code</code>) enth\u00e4lt, der gegen ein kurzlebiges Access- und ein langlebiges Refresh-Token eingetauscht werden kann.</p> <p>Der folgende und alle weiteren Aufrufe gegen die APIs von Heureka erfordern eine Authentisierung via mTLS.</p> <pre><code>curl -v --cert client.crt --key client.key -X POST \"https://token.testing.heureka.health/oauth2/token\" -d \"grant_type=authorization_code\" -d \"client_id=CLIENT_ID\" -d \"redirect_uri=https://example.com/callback\" -d \"code=AUTH_CODE\"\n</code></pre>"},{"location":"app_access/#request-parameter_1","title":"Request Parameter","text":"Name Beschreibung client_id Client ID der Anwendung grant_type Aktuell unterst\u00fctzt wird <code>authorization_code</code> redirect_uri Redirect URL die f\u00fcr den initialen request verwendet wurde. code Authorization code aus dem vorherigen Schritt"},{"location":"app_access/#response","title":"Response","text":"<pre><code>{\n  \"access_token\": \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJiMDI3ZmMwOS0xMjM0LTQzMjEtOGZhOS05YjM1NDJiZmJhNzEiLCJuYmYiOiIxNzI3MTg2NjkyIiwic2NvcGUiOiJbXCJvZmZsaW5lX2FjY2Vzc1wiXSIsImlzcyI6Imh0dHBzOi8vdG9rZW4udGVzdGluZy5oZXVyZWthLmhlYWx0aCIsImV4cCI6IjE3MjcxODY5OTIiLCJpYXQiOiIxNzI3MTg2NjkyIiwianRpIjoiMjgxNzBlNTQtMjA5YS00MjU0LTg3NWMtZmMwMDBlMjcwNzY2In0.Qx3XVXcOIc-h-ckLBW1hgsIJsFQUDMxiJzwwqfJihgo\",\n  \"refresh_token\": \"MTHOCCRvbVcQUQNWALfjZCqD-G9Axv8Z78fYvRxEc7RIQ7-XYZ-DnICIFH7wxE7MIcE67ejvwiHavyzbRm3V_iYvdZOZqhGctXjvo4fCwFfqo2om2-OgP132FugDw6bO\",\n  \"scope\": \"offline_access\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 299\n}\n</code></pre> <pre><code>sequenceDiagram\n    participant u as User\n    participant s as Heureka App\n    participant h as Heureka\n    participant a as Heureka FHIR API\n    s-&gt;&gt;h: /authorization/grant request\n    h-&gt;&gt;u: Authentication prompt\n    u-&gt;&gt;h: Authentication and consent\n    h-&gt;&gt;s: Authorization code response\n    s-&gt;&gt;h: Request token using auth code &amp; mTLS certificate\n    h-&gt;&gt;s: Access &amp; request token\n    s-&gt;&gt;s: store request token together with installation ID (sub claim from access token)\n    s-&gt;&gt;a: requests via access token &amp; mTLS certificate\n    a-&gt;&gt;s: response</code></pre>"},{"location":"app_access/#installation-id","title":"Installation ID","text":"<p>Das Access-Token enth\u00e4lt einen Claim <code>sub</code> welcher die Installations ID beinhaltet. Diese ID bezeichnet eindeutig die Freigabe der jeweiligen Praxis f\u00fcr die Anwendung und sollte anwendungsseitig zusammen mit dem Access- und Refresh-Token abgelegt werden. Die Installation ID wird wieder ben\u00f6tigt, um die Berechtigungs-Flows zu starten oder um Webhooks empfangen zu k\u00f6nnen.</p>"},{"location":"app_access/#token-refresh","title":"Token-Refresh","text":"<p>Access-Tokens sind kurzlebig und m\u00fcssen daher mithilfe des Refresh-Tokens nach Ablauf erneuert werden.</p> <pre><code>curl -v --cert client.crt --key client.key -X POST \"https://token.testing.heureka.health/oauth2/token\" -d \"grant_type=refresh_token\" -d \"client_id=CLIENT_ID\" -d \"refresh_token=REFRESH_TOKEN\"\n</code></pre>"},{"location":"app_access/#berechtigungen-aktualisieren","title":"Berechtigungen Aktualisieren","text":"<p>Beim Autorisierungsschritt erteilt der/die Benutzer:in der Anwendung Zugriff auf bestimmte Ressourcen (Bspw. Patientendaten, Medikation, etc.). Diese werden im Rahmen des Onboardings zwischen Anwendung &amp; Heureka definiert. Des Weiteren k\u00f6nnen, auch im Nachhinein, optionale Berechtigungen definiert werden, welche zus\u00e4tzlich freigegeben werden k\u00f6nnen.</p> <p>Wenn die Anwendung nachtr\u00e4glich zus\u00e4tzliche Berechtigungen anfordern (oder abgeben) m\u00f6chte ist dies m\u00f6glich, indem der Benutzer auf die folgende Seite geleitet wird auf der/die Benutzer:in zus\u00e4tzliche Berechtigungen vergeben oder Berechtigungen entziehen.</p> <pre><code>https://portal.testing.heureka.health/authorization/update?installation_id=INSTALLATION_ID&amp;redirect_uri=https://example.com/callback\n</code></pre>"},{"location":"app_access/#request-parameter_2","title":"Request Parameter","text":"Name Beschreibung installation_id Installation ID aus dem Access-Token redirect_uri URI an die nach erfolgter Freigabe weitergeleitet wird"},{"location":"app_access/#redirect-error-codes_1","title":"Redirect Error Codes","text":"<p>Falls bei der Autorisierung ein Fehler auftritt, enth\u00e4lt die <code>redurect_uri</code> einen <code>error</code> Query-Parameter mit einem entsprechenden Fehlercode.</p> <p>Wird der Vorgang abgebrochen, enth\u00e4lt der <code>error</code> Parameter den Wert <code>cancelled</code>.</p> <p>Benutzer:innen haben immer auch die M\u00f6glichkeit, via Heureka Portal einer Anwendung die Berechtigung zu entziehen.</p> <pre><code>sequenceDiagram\n    participant u as User\n    participant s as Heureka App\n    participant h as Heureka\n    s-&gt;&gt;h: /authorization/update request\n    h-&gt;&gt;u: Authentication prompt\n    u-&gt;&gt;h: Authentication and update grants\n    h-&gt;&gt;s: Redirect to redirect_uri\n    s-&gt;&gt;h: check current grants via api configuration endpoint\n    h-&gt;&gt;s: response</code></pre>"},{"location":"app_access/#verbindung-trennen","title":"Verbindung Trennen","text":"<p>Um den Benutzer:innen die M\u00f6glichkeit zu geben den Zugriff auf freigegebene Daten vollst\u00e4ndig zu entziehen, kann auf folgende Seite weitergeleitet werden.</p> <pre><code>https://portal.testing.heureka.health/authorization/revoke?installation_id=INSTALLATION_ID&amp;redirect_uri=https://example.com/callback\n</code></pre>"},{"location":"app_access/#request-parameter_3","title":"Request Parameter","text":"Name Beschreibung installation_id Installation ID aus dem Access-Token redirect_uri URI an die nach dem Trennen der Verbindung weitergeleitet wird"},{"location":"app_access/#redirect-error-codes_2","title":"Redirect Error Codes","text":"<p>Falls bei der Autorisierung ein Fehler auftritt, enth\u00e4lt die <code>redurect_uri</code> einen <code>error</code> Query-Parameter mit einem entsprechenden Fehlercode.</p> <p>Wird der Vorgang abgebrochen, enth\u00e4lt der <code>error</code> Parameter den Wert <code>cancelled</code>.</p> <p>Benutzer:innen haben immer auch die M\u00f6glichkeit die Verbindung aus dem Heureka Portal zu trennen.</p> <pre><code>sequenceDiagram\n    participant u as User\n    participant s as Heureka App\n    participant h as Heureka\n    s-&gt;&gt;h: /authorization/revoke request\n    h-&gt;&gt;u: Authentication prompt\n    u-&gt;&gt;h: Authentication and revoke grants\n    h-&gt;&gt;s: Redirect to redirect_uri</code></pre>"},{"location":"app_access/#api-verwendung","title":"API Verwendung","text":"<p>Nachdem die Anwendung den Autorisierungsvorgang f\u00fcr eine Praxis erfolgreich abgeschlossen und damit ein g\u00fcltiges Access-Token erhalten hat k\u00f6nnen Requests gegen die API ausgef\u00fchrt werden.</p> <p>Die Peer-to-peer Architektur von Heureka erm\u00f6glicht den direkten und sicheren Zugriff auf die Daten des Praxisinformationssystems in dem alle Anfragen via eines Proxy-Setups direkt auf das Prim\u00e4rsystem gelangen.</p>"},{"location":"app_access/#api-konfiguration","title":"API Konfiguration","text":"<p>Der API-Konfiguration-Endpunkt liefert zusammen mit der HCP-spezifischen URL f\u00fcr die FHIR-API auch die Proxykonfiguration zur\u00fcck, welche f\u00fcr Requests gegen die FHIR-API verwendet werden muss. Ausserdem enth\u00e4lt die API-Konfiguration die aktuell f\u00fcr die Installation g\u00fcltigen Berechtigungen (Grants).</p> <p>Dieser Endpunkt liefert immer die aktuell g\u00fcltigen Berechtigungen f\u00fcr das verwendete Token zur\u00fcck. Er sollte dazu verwendet werden, um sicherzustellen, dass die Awendung die erforderlichen Berechtigungen besitzt.</p> <p>Als Best Practice wird empfohlen, die g\u00fcltigen Berechtigungen vor der ersten User-Interaktion zu \u00fcberpr\u00fcfen, um damit sicherzustellen, dass nachfolgende API-Zugriffe erlaubt sind. Auch sollte nach dem Ende des Grant-/Update-/Revoke-Flows der aktuelle Stand der Berechtigungen anhand des Endpunkts \u00fcberpr\u00fcft werden.</p> <p>Hinweis</p> <p>Es ist in seltenen F\u00e4llen m\u00f6glich, dass eine Differenz zwischen dem Resultat des API-Konfiguration-Endpunkts und den Berechtigungen bei der Abfrage von Daten besteht, da die Berechtigungen nicht unmittelbar synchronisiert werden. Die \"Source of Truth\" ist in dem Fall immer der API-Konfiguration-Endpunkt und nach sp\u00e4testens 60 Sekunden sollten die Systeme wieder eine einheitliche Datengrundlage haben.</p> <pre><code>{\n    \"fhirEndpoint\": \"https://6a5da575-6ac0-4e06-b9a5-a2210e30337c.api.testing.heureka.health/fhir\",\n    \"proxy\": \"http://tunnel.testing.heureka.health:7000\",\n    \"grants\": {\n        \"PATIENT\": [\n          \"READ\",\n          \"SEARCH\"\n        ],\n        \"MEDICATION_STATEMENT\": [\n          \"SEARCH\"\n        ]\n    }\n}\n</code></pre>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#2024-12-11","title":"2024-12-11","text":"<p>G\u00fcltige AHV Nummern</p> <p>Neu werden AHV-Nummern sowohl bei der Ein- als auch bei der Ausgabe validiert.</p> <p>Ung\u00fcltige AHV-Nummern werden von der API-Response entfernt.  Die AHV-Nummern werden bei der Ausgabe ausserdem normalisiert, d.h. sie enthalten keine Trennpunkte.</p>"},{"location":"changelog/#2024-11-26","title":"2024-11-26","text":"<p>Webhooks</p> <p>Heureka unterst\u00fctzt jetzt Webhooks, um Anwendungen aktiv \u00fcber \u00c4nderungen ihrer Berechtigungen zu informieren. Mehr Informationen dazu in der Dokumentation.</p>"},{"location":"mtls_security/","title":"mTLS Security","text":""},{"location":"mtls_security/#client-zertifikate-private-schlussel","title":"Client-Zertifikate &amp; Private Schl\u00fcssel","text":"<p>Die Heureka API erfordert eine mTLS Verbindung. Das dazu notwendige Zertifikat wird von Heureka im Austausch f\u00fcr einen CSR (Certificate Signing Request) erstellt.</p>"},{"location":"mtls_security/#privaten-schlussel-erstellen","title":"Privaten Schl\u00fcssel Erstellen","text":"<pre><code>openssl genrsa -out my-heureka-app.key 4096\n</code></pre>"},{"location":"mtls_security/#privaten-schlussel-aufbewahren","title":"Privaten Schl\u00fcssel Aufbewahren","text":"<p>Der private Schl\u00fcssel ist zentral f\u00fcr die sichere Kommunikation mit Heureka. Es ist deshalb wichtig, dass dieser m\u00f6glichst sicher und idealerweise nur auf dem System, auf welchem er verwendet wird, zug\u00e4nglich ist.</p>"},{"location":"mtls_security/#certificate-signing-request-csr-erstellen","title":"Certificate Signing Request (CSR) Erstellen","text":"<pre><code>openssl req -new -key my-heureka-app.key -nodes -out my-heureka-app.csr -subj \"/CN=My Heureka App\"\n</code></pre>"},{"location":"resources/","title":"Ressourcen","text":"<ul> <li>Postman collection</li> </ul>"},{"location":"testing/","title":"Service Testszenarien","text":"<p>Um User:innen ein m\u00f6glichst gutes Erlebnis rund um die Verwendung von Heureka zu bieten, ist es sinnvoll verschiedene Szenarien zu ber\u00fccksichtigen und zu testen. Dies betrifft vor allem die Autorisierungs-Flows, die sowohl aus dem Heureka Portal als auch serviceseitig initiiert werden k\u00f6nnen. Diese sind nachfolgend beschrieben.</p> <p>Um die aktuellen Berechtigungen zu \u00fcberpr\u00fcfen, muss der API-Konfiguration Endpunkt verwendet werden.</p>"},{"location":"testing/#initiale-freigabe","title":"Initiale Freigabe","text":"<p>Die initiale Freigabe der Praxis f\u00fcr den Service erfolgt immer serviceseitig, indem der/die Benutzer:in auf das Portal geleitet wird, um den Authorization Code Flow zu starten. </p>"},{"location":"testing/#verbindungstrennung","title":"Verbindungstrennung","text":""},{"location":"testing/#heureka-portal","title":"Heureka-Portal","text":"<p>Der Service muss auf die Verbindungstrennung entsprechend erkennen und kann beispielsweise die M\u00f6glichkeit bieten, sich erneut mit Heureka zu verbinden.</p> <p>Preview: Wird die Verbindung via Heureka Portal getrennt, wird der Service dar\u00fcber via Webhook informiert, wenn eine Webhook URL konfiguriert ist.</p>"},{"location":"testing/#service","title":"Service","text":"<p>Wird das Trennen der Verbindung vom Service aus initiiert, so wird anschliessend wieder an die angegebene <code>redirect_uri</code> zur\u00fcck zum Service geleitet. Der Service muss anschliessend (mithilfe des API Configuration Endpunkts) \u00fcberpr\u00fcfen, ob die Verbindung erfolgreich getrennt wurde.</p>"},{"location":"testing/#berechtigungen-aktualisieren","title":"Berechtigungen Aktualisieren","text":"<p>Wenn ein Service mit optionalen Berechtigungen registriert wurde, hat der/die Heureka Benutzer:in jederzeit die M\u00f6glichkeit dem Service diese Berechtigungen zu gew\u00e4hren oder zu entziehen. </p>"},{"location":"testing/#heureka-portal_1","title":"Heureka-Portal","text":"<p>Der Service muss damit umgehen k\u00f6nnen, dass sich die vergebenen Berechtigungen \u00e4ndern k\u00f6nnen (mithilfe des API Configuration Endpunkts k\u00f6nnen die aktuellen Berechtigungen f\u00fcr die mit dem Access-Token verbundene Installation abgefragt werden.)</p> <p>Preview: Werden die Berechtigungen via Heureka Portal aktualisiert, wird der Service dar\u00fcber via Webhook informiert, wenn eine Webhook URL konfiguriert ist.</p>"},{"location":"testing/#service_1","title":"Service","text":"<p>Wird eine Aktualisierung der Berechtigungen vom Service aus initialisiert, so wird der Benutzer anschliessend wieder via der angegeben <code>redirect_uri</code> zur\u00fcck zum Service geleitet. Der Service muss anschliessend (mithilfe des API Configuration Endpunkts) \u00fcberpr\u00fcfen, ob die Berechtigungen wie erwartet angepasst wurden.</p>"},{"location":"testing/#testprotokoll","title":"Testprotokoll","text":"# Beschreibung Ablauf Erwartetes Resultat 1 Zugriff erfolgreich beantragen <ul><li>Benutzer wird auf <code>/authorization/grant</code> mit den entsprechenden Parametern geleitet.</li><li>User autorisiert Service.</li></ul> Redirect an Service <code>redirect_uri</code> mit <code>code</code> Parameter um Access- &amp; Refresh-Token zu l\u00f6sen 2 Zugriffsantrag abgebrochen <ul><li>Benutzer wird auf <code>/authorization/grant</code> mit den entsprechenden Parametern geleitet.</li><li>User bricht ab.</li></ul> Redirect an Service <code>redirect_uri</code> mit <code>error=access_denied</code>-Parameter 3 Berechtigungen aktualisieren <ul><li>Benutzer wird auf <code>/authorization/update</code> mit den entsprechenden Parametern geleitet.</li><li>User aktualisiert Berechtigungen.</li></ul> Redirect an Service <code>redirect_uri</code> 4 Aktualisieren der Berechtigungen abgebrochen <ul><li>Benutzer wird auf <code>/authorization/update</code> mit den entsprechenden Parametern geleitet.</li><li>User bricht ab.</li></ul> Redirect an Service <code>redirect_uri</code> mit <code>error=cancelled</code>-Parameter 5 Verbindung trennen <ul><li>Benutzer wird auf <code>/authorization/revoke</code> mit den entsprechenden Parametern geleitet.</li><li>User entzieht berechtigungen.</li></ul> Redirect an Service <code>redirect_uri</code> 6 Verbindung trennen abgebrochen <ul><li>Benutzer wird auf <code>/authorization/revoke</code> mit den entsprechenden Parametern geleitet.</li><li>User bricht ab.</li></ul> Redirect an Service <code>redirect_uri</code> mit <code>error=cancelled</code>-Parameter 7 Benutzer aktualisiert Berechtigungen via Portal <ul><li>Benutzer verwendet Portal um zus\u00e4tzliche Berechtigungen zu vergeben oder zu entziehen.</li></ul> Neue Berechtigungen werden nach kurzer Zeit (max. 60 Sekunden) aktiv und k\u00f6nnen via API-Konfiguration-Endpunkt abgerufen werden. 8 Benutzer trennt Verbindung via Portal <ul><li>Benutzer verwendet Portal um die Verbindung vom Service zu trennen.</li></ul> Refresh-Token verliert G\u00fcltigkeit und Berechtigungen f\u00fcr aktives Access-Token werden nach kurzer Zeit (max. 60 Sekunden) entzogen."},{"location":"troubleshooting/","title":"Troubleshooting","text":"<p>Beim Verwenden der Heureka API k\u00f6nnen diverse Fehler auftreten. Zur Hilfe wurden daher hier die h\u00e4ufigsten dokumentiert.</p>"},{"location":"troubleshooting/#http-fehler","title":"HTTP Fehler","text":"<p>Wir benutzen die standard HTTP Status Codes nach RFC 9110, um erfolgreiche oder fehlerhafte Anfragen zu beantworten. <code>2xx</code> Status codes sind erfolgreiche Anfragen, <code>4xx</code> sind Client-Fehler und <code>5xx</code> sind Server-Fehler.</p> <p>Fehler der API entsprechen den FHIRv4 Standard und sehen in der Regel wie folgt aus.</p> <pre><code>HTTP/1.1 404\nServer: nginx\nDate: Sun, 01 Jan 2000 12:00:00 GMT\nContent-Type: application/fhir+json;charset=UTF-8\n\n{\n  \"resourceType\": \"OperationOutcome\",\n  \"issue\": [\n    {\n      \"severity\": \"error\",\n      \"code\": \"processing\",\n      \"diagnostics\": \"Provided id could not be read\"\n    }\n  ]\n}\n</code></pre> <p>Es kann dazu kommen, dass die Fehlermeldungen nicht diesem Standard entsprechen, sollte die Schnittstelle nicht einen FHIR Endpunkt betreffen. Ein Beispiel w\u00e4re die <code>api-configuration</code> Schnittstelle.</p> <p>Diese \u00fcbrigen Fehler sind nach RFC 9457 strukturiert.</p>"},{"location":"troubleshooting/#400-bad-request","title":"400 Bad Request","text":"<p>Die Anfrage wurde falsch gestellt. Mehr Informationen sind in der Regel im Body enthalten.</p>"},{"location":"troubleshooting/#401-unauthorized","title":"401 Unauthorized","text":"<p>M\u00f6gliche Ursachen:</p> <ul> <li>Es wurde kein Token mitgeliefert.</li> <li>Das Refreshtoken ist abgelaufen.</li> <li>Der Zugriff zur Praxis wurde entzogen.</li> </ul>"},{"location":"troubleshooting/#403-forbidden","title":"403 Forbidden","text":"<p>Man besitzt keine Berechtigungen, um diese Ressource abfragen zu d\u00fcrfen.</p> <p>M\u00f6gliche Ursache:</p> <ul> <li>Die Praxis hat den Zugriff auf diese Ressource entzogen.</li> </ul>"},{"location":"troubleshooting/#404-not-found","title":"404 Not Found","text":"<p>M\u00f6gliche Ursachen:</p> <ul> <li>Die Ressource existiert nicht</li> <li>Die mitgelieferte ID ist falsch</li> </ul>"},{"location":"troubleshooting/#429-too-many-requests","title":"429 Too Many Requests","text":"<p>Es wurden zu viele Anfragen in einem bestimmten Zeitraum gestellt.</p>"},{"location":"troubleshooting/#500-internal-server-error","title":"500 Internal Server Error","text":"<p>Ein Server-interner Fehler ist aufgetreten. Dieses Verhalten ist nicht erwartet und wird von uns \u00fcberwacht.</p>"},{"location":"troubleshooting/#502-bad-gateway","title":"502 Bad Gateway","text":"<p>Der Server kann nicht erreicht werden. Bitte versuchen Sie es in ein paar Minuten erneut.</p>"},{"location":"troubleshooting/#request-timeout","title":"Request Timeout","text":"<p>Anfragen an die FHIR-API laufen \u00fcber einen HTTP-Proxy. Dieser hat ein Timeout von 10 Sekunden konfiguriert, nach welchem die Verbindung terminiert, falls keine Antwort erfolgt.</p> <p>Wir empfehlen daher das Timeout des verwendeten API-Clients auf einen passenden Wert zu setzen, bzw. den Verbindungsabbruch entsprechend zu behandeln.</p>"},{"location":"troubleshooting/#ursache","title":"Ursache","text":"<p>Ein Timeout bedeutet meistens, dass lediglich ein Prim\u00e4rsystem zurzeit nicht in der Lage ist zu antworten. M\u00f6glicherweise kann die Anfrage nicht in dem gew\u00fcnschten Zeitraum bearbeitet werden oder das Prim\u00e4rsystem ist nicht online.</p>"},{"location":"troubleshooting/#mogliche-losung","title":"M\u00f6gliche L\u00f6sung","text":"<p>Es sollten Vorkehrungen getroffen werden, damit die Anfragen nicht in einer Endlosschleife enden. Ein Exponential Backoff w\u00e4re daher eine m\u00f6gliche L\u00f6sung. Die Anfrage nach kleineren Datenmengen k\u00f6nnte weiterhin die Antwortzeit verbessern.</p>"},{"location":"webhooks/","title":"Webhooks","text":""},{"location":"webhooks/#webhooks","title":"Webhooks","text":"<p>Um Anwendungen \u00fcber \u00c4nderungen ihrer Installationen zu informieren, verwendet Heureka Webhooks.</p> <p>Webhooks sind POST-Requests an einen vorher festgelegten Endpunkt.</p> <p>F\u00fcr den Empfang von Webhooks von Heureka k\u00f6nnte die URL dazu beispielsweise so aussehen: https://www.example.com/heureka/webhooks/.</p> <p>Die erfolgreiche Verarbeitung eines Webhooks wird durch die R\u00fcckgabe einer 2xx-Antwort (Statuscode 200-299) auf die Webhook-Nachricht innerhalb von maximal 15 Sekunden angezeigt.</p> <p>Ein wichtiger Aspekt bei der Handhabung von Webhooks ist die \u00dcberpr\u00fcfung der Signatur und des Zeitstempels bei der Verarbeitung der Nachricht.</p> <p>Mehr dazu im Abschnitt Verifikation.</p>"},{"location":"webhooks/#setup","title":"Setup","text":"<p>Um Webhooks verwenden zu k\u00f6nnen, muss ein Endpunkt bei uns registriert werden. Dazu einfach eine E-Mail an support@heureka.health mit der entsprechenden Ziel-URL und dem Namen der Anwendung senden. Wir aktivieren daraufhin die Webhooks f\u00fcr die Anwendung und stellen das Signing-Secret f\u00fcr die Verifikation der Daten zur Verf\u00fcgung.</p>"},{"location":"webhooks/#events","title":"Events","text":"<p>Die Eventtypen, die von Heureka via Webhook versendet werden, sind hier dokumentiert:</p> <p>https://www.svix.com/event-types/eu/org_2onSGfPZRBtRVpRKxm1v1jATLgs/</p>"},{"location":"webhooks/#verifikation","title":"Verifikation","text":"<p>Mit der \u00dcberpr\u00fcfung der Webhook-Signatur kann festgestellt werden, dass Webhook-Nachrichten tats\u00e4chlich von uns und nicht von einem b\u00f6swilligen Akteur gesendet wurden.</p> <p>Eine detailliertere Erkl\u00e4rung und Links zur Anleitung findet sich in diesem Artikel \u00fcber warum Sie Webhooks verifizieren sollten.</p>"},{"location":"webhooks/#fehlerbehandlungen","title":"Fehlerbehandlungen","text":"<p>Wenn ein Webhook nicht mit einem 2xx-Statuscode quittiert wird, wird nach einem festgelegten Zeitplan versucht die Nachricht erneut zuzustellen. Dabei ist zu beachten, dass Nachrichten nach einer bestimmten Zeit f\u00fcr die Anwendung nicht mehr relevant sein k\u00f6nnten. Die Nachrichten enthalten einen Zeitstempel, anhand dessen das Alter der Nachricht \u00fcberpr\u00fcft werden kann.</p> <p>Der Zeitplan f\u00fcr die wiederholten Zustellversuche:</p> <ul> <li>Erster Versuch</li> <li>5 Sekunden</li> <li>5 Minuten</li> <li>30 Minuten</li> <li>2 Stunden</li> <li>5 Stunden</li> <li>10 Stunden</li> <li>10 Stunden</li> </ul> <p>Wenn alle Nachrichten an einen Endpunkt an 5 aufeinanderfolgenden Tagen nicht zugestellt werden k\u00f6nnen, wird der Endpunkt automatisch deaktiviert.</p>"}]}